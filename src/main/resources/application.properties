# Application Configuration
spring.application.name=java-ddd-cqrs-poc
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://db:5432/mydatabase
spring.datasource.username=myuser
spring.datasource.password=mypassword
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ceylanomer.java_ddd_cqrs_poc
spring.kafka.bootstrap-servers.auto-startup=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# OpenTelemetry Configuration
management.otlp.metrics.export.enabled=true
management.otlp.metrics.export.url=http://otel-collector:4318/v1/metrics
management.otlp.metrics.export.step=60s
management.otlp.metrics.export.resource-attributes.service.name=${spring.application.name}

# Tracing Configuration
management.tracing.sampling.probability=1.0
management.tracing.enabled=true
management.otlp.tracing.endpoint=http://otel-collector:4318/v1/traces

# Alternatif olarak, OTLP metrik dışa aktarımını devre dışı bırakmak için:
# management.otlp.metrics.export.enabled=false

# Resilience4j Configuration
resilience4j.circuitbreaker.instances.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.default.slidingWindowSize=100
resilience4j.circuitbreaker.instances.default.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50
resilience4j.circuitbreaker.instances.default.eventConsumerBufferSize=10

# Logging Configuration
logging.level.root=INFO
logging.level.com.ceylanomer=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true

# Test Profile Configuration
spring.config.activate.on-profile=test
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.kafka.bootstrap-servers.auto-startup=false
management.otlp.metrics.export.enabled=false
management.tracing.enabled=false
